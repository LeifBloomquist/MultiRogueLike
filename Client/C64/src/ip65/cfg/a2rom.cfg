
MEMORY {
    ZP: start = $00, size = $08, type = rw, define = yes;
    IP65ZP: start = $0f, size = $10, type = rw, define = yes;
    C700_BANK: start = $c700, size = $100, file = %O;
    C800_BANK_0: start = $c800, size = $800, file = %O, fill=yes, fillval=$F0;
    C800_BANK_1: start = $c800, size = $800, file = %O, fill=yes, fillval=$F1;
    C800_BANK_2: start = $c800, size = $800, file = %O, fill=yes, fillval=$F2;
    C800_BANK_3: start = $c800, size = $800, file = %O, fill=yes, fillval=$F3;
    C800_BANK_4: start = $c800, size = $800, file = %O, fill=yes, fillval=$F4;
    C800_BANK_5: start = $c800, size = $800, file = %O, fill=yes, fillval=$F5;
    C800_BANK_6: start = $c800, size = $800, file = %O, fill=yes, fillval=$F6;
    C800_BANK_7: start = $c800, size = $800, file = %O, fill=yes, fillval=$F7;
    C800_BANK_8: start = $c800, size = $800, file = %O, fill=yes, fillval=$F8;
    C800_BANK_9: start = $c800, size = $800, file = %O, fill=yes, fillval=$F9;
    C800_BANK_A: start = $c800, size = $800, file = %O, fill=yes, fillval=$FA;
    C800_BANK_B: start = $c800, size = $800, file = %O, fill=yes, fillval=$FB;
    C800_BANK_C: start = $c800, size = $800, file = %O, fill=yes, fillval=$FC;
    C800_BANK_D: start = $c800, size = $800, file = %O, fill=yes, fillval=$FD;
    C800_BANK_E: start = $c800, size = $800, file = %O, fill=yes, fillval=$FE;
    RAM: start = $800, size = $8000, file = %O;    
}
SEGMENTS {
    C700: load=C700_BANK, type=ro,define=yes;
    CODE: load=C700_BANK, type=ro,define=yes;
    C800_0: load=C800_BANK_0, type=ro,define=yes;
    C800_1: load=C800_BANK_1, type=ro,define=yes;
    C800_2: load=C800_BANK_2, type=ro,define=yes;
    C800_3: load=C800_BANK_3, type=ro,define=yes;
    C800_4: load=C800_BANK_4, type=ro,define=yes;
    C800_5: load=C800_BANK_5, type=ro,define=yes;
    C800_6: load=C800_BANK_6, type=ro,define=yes;
    C800_7: load=C800_BANK_7, type=ro,define=yes;
    C800_8: load=C800_BANK_8, type=ro,define=yes;
    C800_9: load=C800_BANK_9, type=ro,define=yes;
    C800_A: load=C800_BANK_A, type=ro,define=yes;
    C800_B: load=C800_BANK_B, type=ro,define=yes;
    C800_C: load=C800_BANK_C, type=ro,define=yes;
    C800_D: load=C800_BANK_D, type=ro,define=yes;
    C800_E: load=C800_BANK_E, type=ro,define=yes;
    
    DATA: load = RAM, run=RAM, type = rw , define = yes;
    BSS: load=RAM, type = bss, define = yes;
    ZEROPAGE: load = ZP, type = zp;
    IP65ZP: load = IP65ZP, type = zp;
}


